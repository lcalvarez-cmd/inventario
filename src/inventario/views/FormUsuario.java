package inventario.views;

import inventario.config.Conexion;
import inventario.modelo.Usuario;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class FormUsuario extends javax.swing.JFrame {
    DefaultTableModel model;
    /**
     * Creates new form Usuario
     */
    public FormUsuario() {
        initComponents();
        String [] titulos = {"ID","USERNAME","NOMBRES","APELLIDOS","DIRECCIÓN","CORREO","ESTADO","ROL"};
        model = new DefaultTableModel(null,titulos);
        tblUsuarios.setModel(model);
        cargarDatos();
        txtIdUsuario.setVisible(false);
        limpiar();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        cbxRol = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        cbxEstado = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        txtIdUsuario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Agregar nuevo usuario");

        jLabel2.setText("Username:");

        jLabel3.setText("Contraseña:");

        jLabel4.setText("Nombres:");

        jLabel5.setText("Apellidos:");

        jLabel6.setText("Dirección:");

        jLabel7.setText("Correo:");

        jLabel8.setText("Rol:");

        btnVolver.setText("volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        cbxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "usuario" }));

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jLabel9.setText("Estado");

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "activo", "inactivo" }));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnVolver)
                                .addGap(24, 24, 24)))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                        .addComponent(txtCorreo)
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNombres, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtApellidos, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregar)
                                    .addComponent(btnCancelar)
                                    .addComponent(btnEditar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAgregar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnEditar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addGap(25, 25, 25)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //metodo para agregarUsuario
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Conexion objConexion = new Conexion();
        Usuario objUsuario = recuperarDatosGUI();        
        try {
            //enviamos la consulta verificando que el usuario no este en la bd
            ResultSet respuesta = objConexion.consultarRegistro("Select * from usuario where username = '"+objUsuario.getUsername()+"'");
            if(!respuesta.isBeforeFirst()){//el usuario no esta en la bd lo ingreamos
                //damos formato
                String sentencia = String.format("INSERT INTO usuario (username,password,nombres,apellidos,direccion,correo,estado,rol) VALUES ('%s','%s','%s','%s','%s','%s','%d','%s')",objUsuario.getUsername(),objUsuario.getPassword(),objUsuario.getNombres(),objUsuario.getApellidos(),objUsuario.getDireccion(), objUsuario.getCorreo(), objUsuario.getEstado(), objUsuario.getRol() );
                objConexion.ejecutarSentenciSQL(sentencia);
            }else{
                JOptionPane.showMessageDialog(null, "Este username no esta disponible");
            }
            cargarDatos();
        } catch (Exception e) {
            System.out.println("No se pudo guardar el usuario");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    //esta actividad es para que cuando de click en la tabla tome los datos
    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        if(evt.getClickCount() == 1){
            try {
                JTable receptor = (JTable)evt.getSource();
                txtIdUsuario.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0 ).toString());
                txtUsername.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString());
                //buscar el usuario para obtener la contraseña ya que esta no esta en la tabla
                Conexion objConexion = new Conexion();
                ResultSet usuario = objConexion.consultarRegistro("Select * from usuario where username = '"+receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString()+"'");
                while(usuario.next()){
                    txtPassword.setText(usuario.getString("password"));
                }                
                txtNombres.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 2).toString());
                txtApellidos.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),3).toString());
                txtDireccion.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 4).toString());
                txtCorreo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 5).toString());
                int rol = 1; //1. usuario
                if(receptor.getModel().getValueAt(receptor.getSelectedRow(), 7).toString().equals("admin")){
                    rol = 0;//0. admin
                }
                cbxRol.setSelectedIndex(rol);
                int estado = 0;
                if (receptor.getModel().getValueAt(receptor.getSelectedRow(), 6).toString().equals("inactivo")) {
                    estado = 1;
                }
                cbxEstado.setSelectedIndex(estado);
                btnAgregar.setEnabled(false);
                btnEditar.setEnabled(true);
                btnCancelar.setEnabled(true);
                objConexion.desconectar();
            } catch (Exception ex) {
                Logger.getLogger(FormUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        Conexion objConexion = new Conexion();
        Usuario objUsuario = recuperarDatosGUI();
        //debemos comparar la constraseña si es la misma a la guardada no hacemos nada
        //si es diferente debemos guardarla cifrada
        ResultSet usuariobd = objConexion.consultarRegistro("Select * from usuario where id_usuario = '"+objUsuario.getId_usuario()+"'");
        String password = "";
        try {
            while(usuariobd.next()){
                password = usuariobd.getString("password");
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        //si el password actual en la vista es diferente al password que esta en la bd
        if(!objUsuario.getPassword().equals(password)){//se actualiza el password
            String nuevopass = Base64.getEncoder().encodeToString(objUsuario.getPassword().getBytes());
            objUsuario.setPassword(nuevopass);
        }
        //ya que si el password es el mismo no lo puedo volver a cifrar porque cambiaria 
        String sentencia = String.format("UPDATE usuario SET username = '%s',password = '%s',nombres = '%s',apellidos = '%s',direccion = '%s',correo = '%s',estado = '%d',rol = '%s' where id_usuario = %d", objUsuario.getUsername(),objUsuario.getPassword(),objUsuario.getNombres(),objUsuario.getApellidos(),objUsuario.getDireccion(),objUsuario.getCorreo(),objUsuario.getEstado(),objUsuario.getRol(),objUsuario.getId_usuario());
        objConexion.ejecutarSentenciSQL(sentencia);
        this.cargarDatos();
        this.limpiar();
        objConexion.desconectar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Inventario vistaIntenvario = new Inventario();//creo un objeto de la sigte vista
        vistaIntenvario.setVisible(true);//la hago visible
        setVisible(false);//oculto la vista de login
    }//GEN-LAST:event_btnVolverActionPerformed

    public Usuario recuperarDatosGUI(){
        Usuario objUsuario = new Usuario();
        objUsuario.setId_usuario(Integer.parseInt(txtIdUsuario.getText()));
        objUsuario.setUsername(txtUsername.getText());
        objUsuario.setPassword(txtPassword.getText());
        objUsuario.setNombres(txtNombres.getText());
        objUsuario.setApellidos(txtApellidos.getText());
        objUsuario.setDireccion(txtDireccion.getText());
        objUsuario.setCorreo(txtCorreo.getText());
        objUsuario.setRol(cbxRol.getSelectedItem().toString());
        int estado = 1;
        if(cbxEstado.getSelectedItem().toString().equals("inactivo"))
            estado = 0;
        objUsuario.setEstado(estado);
        return objUsuario;
    }
    
    public void cargarDatos(){
        while(model.getRowCount() > 0){
            model.removeRow(0);
        }
        Conexion objConexion = new Conexion();
        
        try {
            ResultSet respuesta = objConexion.consultarRegistro("SELECT * FROM usuario");
            while(respuesta.next()){
                String estado = "inactivo";//como el estado esta en enteros 
                if(respuesta.getString("estado").equals("1")){ estado = "activo"; } //si el estado es 1 lo pasamos a un String activo
                Object[] objUsuario = {respuesta.getString("id_usuario"),respuesta.getString("username"),respuesta.getString("nombres"),respuesta.getString("apellidos"),respuesta.getString("direccion"),respuesta.getString("correo"),estado,respuesta.getString("rol")};
                model.addRow(objUsuario);
            }
        } catch (Exception e) {
            System.out.println("Hay un error al recuperar los usuarios "+e);
        }
    }
    
    public void limpiar(){
        txtIdUsuario.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDireccion.setText("");
        txtCorreo.setText(""); 
        
        btnCancelar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnAgregar.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbxEstado;
    private javax.swing.JComboBox<String> cbxRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
